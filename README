Oktawave-CLI version 0.8.* README


1. Installation

If you are installing oktawave-cli from source, install the following Python
module dependencies first:
- requests
- swiftclient
- argparse
- setproctitle
- prettytable

To install oktawave-api use:
python setup.py build
python setup.py install
(you need to have python distutils installed to do this)


2. Authentication

To login to Oktawave, you need to specify username and password. You can do this
either by passing command-line arguments (e.g. oktawave-cli -u USERNAME -p PASSWORD)
or by writing the credentials to the config file. This file should have the
following format:

[Auth]
username=USERNAME
password=PASSWORD

and be put in ~/.oktawave-cli/config. You can specify a different path to the
configuration file with the -c command line option.

For OCS authentication you can use command-line arguments: -ocsu USERNAME -ocsp PASSWORD
or put credentials to the config file in OCS section ex:

[OCS]
username=TestUser1795:admin
password=PASSWORD


3. Basic usage

You can use oktawave-cli in 2 ways: as a script, by executing a command or as an
interactive console. The default is script mode: in the simplest case you can
execute a command using the syntax:

oktawave-cli NAMESPACE COMMAND [arguments]

where NAMESPACE is a fancy name for a group of commands (at the moment there are
5 namespaces: Account, OCI, OCS, OVS and ORDB) that operate on related objects.
This assumes that you have written your login credentials to
~/.oktawave-cli/config, if not you will have to specify -u and -p before
NAMESPACE.

Required arguments depend on the command; you can see what arguments are needed
by using oktawave-cli NAMESPACE COMMAND --help.


4. Interactive mode

To enter the interactive mode, use oktawave-cli -i (again we assume that your
login credentials are in config file; you can also use -u and -p). In
interactive mode you can use the available commands like this:

NAMESPACE COMMAND [arguments]

To exit the interactive mode, type "exit".


5. Help

You can get a list of available namespaces by issuing
oktawave-cli --help
To display a list of commands available in a namespace use
oktawave-cli NAMESPACE --help
To display information about a command use
oktawave-cli NAMESPACE COMMAND --help

You can also use this in interactive mode.


6. Contributing

The development of oktawave-cli takes place at GitHub:

	https://github.com/gnosek/oktawave-cli

Upstream version by Oktawave lives at:

	https://github.com/oktawave-code/oktawave-cli

Previous versions were hosted at sourceforge:

	https://sourceforge.net/projects/oktawave-cli

Built packages can be downloaded from there.
